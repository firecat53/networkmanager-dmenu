[dmenu]
dmenu_command = dmenu
# Note that dmenu_command can contain arguments as well like:
# `dmenu_command = rofi -i -theme nmdm -theme-str '#window {width: 15%%;} listview {lines: 5;}'`
# ^^^ Note the double %%. Required to prevent interpolation errors in ConfigParser
# `dmenu_command = rofi -width 30 -i`
# `dmenu_command = dmenu -i -l 25 -b -nb #909090 -nf #303030`
# `dmenu_command = fuzzel`
active_chars = ==
# Use highlighting instead of active_chars (only applicable to Rofi / Wofi)
highlight = True
# Foreground color of active connection (only applicable to Wofi)
highlight_fg = #5E35B1
# Background color of active connection (only applicable to Wofi)
highlight_bg = #E0E0E0
# Make active connection bold (only applicable to Wofi)
highlight_bold = True
# Remove extra spacing from display
compact = False
# Pinentry command e.g. `pinentry-gtk`
pinentry =
# String of 4 unicode characters representing 1-4 bars strength
wifi_chars = ▂▄▆█
# Characters representing signal strength as an icon
# wifi_icons = 󰤯󰤟󰤢󰤥󰤨
# Python style format string for the access point entries
format = {name}  {sec}  {bars}
# Available variables are:
#  * {name} - Access point name
#  * {sec} - Security type
#  * {signal} - Signal strength on a scale of 0-100
#  * {bars} - Bar-based display of signal strength (see wifi_chars)
#  * {icon} - Icon-based display of signal strength (see wifi_icons)
#  * {max_len_name} and {max_len_sec} are the maximum lengths of {name} / {sec}
#    respectively and may be useful for formatting.
# List saved connections
list_saved = False
# Custom prompt
prompt = Networks

[dmenu_passphrase]
# Uses the -password flag for Rofi, -x for bemenu. For dmenu, sets -nb and
# -nf to the same color or uses -P if the dmenu password patch is applied
# https://tools.suckless.org/dmenu/patches/password/
obscure = False
obscure_color = #222222
# show_pass is the complete CLI command to show current WiFi password in a new terminal window.
# Typically `<terminal --hold -e nmcli device wifi show-password>`
# show_pass = alacritty --hold -e nmcli device wifi show-password
# show_pass = foot bash -c "nmcli device wifi show-password; read -n1 -p 'Press any key...'"

[pinentry]
description = Get network password
prompt = Password:

[editor]
terminal = xterm
gui_if_available = True
gui = nm-connection-editor

[nmdm]
# seconds to wait after a WiFi rescan before redisplaying the results
rescan_delay = 5
# Allows to disable notifications altogether
show_notifications = True
